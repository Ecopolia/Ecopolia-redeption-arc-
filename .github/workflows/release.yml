name: Build and Release Game

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Python 3 and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip wine-stable wine64 unzip
          pip3 install makelove

      - name: Initialize makelove (if not already configured)
        run: |
          if [ ! -f makelove.toml ]; then
            makelove --init
          fi
          
      - name: Populate version number
        run: |
          rm version.lua
          echo "version = '$(git rev-parse HEAD | cut -c1-5)'" > version.lua

      - name: Build the game using makelove
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          makelove --version-name $COMMIT_HASH

      - name: Prepare AppImage build with resources
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          mkdir -p build/$COMMIT_HASH/appimage/resources
          cp reposource/resources/*.json build/$COMMIT_HASH/appimage/resources/

      - name: Package all builds
        run: |
          cd build
          COMMIT_HASH=$(git rev-parse --short HEAD)
          zip -r ecopolia_appimage.zip $COMMIT_HASH/appimage/

      - name: Upload AppImage artifact
        uses: actions/upload-artifact@v3
        with:
          name: ecopolia-appimage
          path: build/ecopolia_appimage.zip

  release:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Download artifact Appimage
        uses: actions/download-artifact@v3
        with:
          name: ecopolia-appimage

      - name: Get latest commit hash
        id: get_commit
        run: echo "::set-output name=commit_hash::$(git rev-parse --short HEAD)"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_commit.outputs.commit_hash }}
          release_name: Release ${{ steps.get_commit.outputs.commit_hash }}
          draft: false
          prerelease: false

      - name: Upload AppImage release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ecopolia_appimage.zip
          asset_name: ecopolia_appimage.zip
          asset_content_type: application/zip
